" test-cat
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""系统设置
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set encoding=utf-8
set fileencoding=utf-8
" set shortmess=atI   " 启动的时候不显示那个援助乌干达儿童的提示
set go=             " 不要图形按钮
set t_Co=256   " 启用256色
"color asmanian2     " 设置背景主题
set guifont=Courier_New:h10:cANSI   " 设置字体
syntax on           " 语法高亮
"autocmd InsertLeave * se nocul  " 用浅色高亮当前行
"autocmd InsertEnter * se cul    " 用浅色高亮当前行
set showcmd         " 输入的命令显示出来，看的清楚些
"set cmdheight=1     " 命令行（在状态行下）的高度，设置为1
"set whichwrap+=<,>,h,l   " 允许backspace和光标键跨越行边界(不建议)
set scrolloff=12     " 光标移动到buffer的顶部和底部时保持3行距离
set novisualbell    " 不要闪烁(不明白)
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}   "状态行显示的内容
set laststatus=0    " 启动显示状态行(1),总是显示状态行(2)
"set foldenable      " 允许折叠
set nofoldenable " 不允许折叠
"set foldmethod=manual   " 手动折叠
"set background=dark "背景使用黑色
set nocompatible  "去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限
" 设置当文件被改动时自动载入
set autoread
"代码补全
set completeopt=preview,menu
"共享剪贴板
set clipboard=unnamed
"自动保存
set autowrite
" set ruler                   " 打开状态栏标尺
"set cursorline              " 突出显示当前行
set magic                   " 设置魔术
set guioptions-=T           " 隐藏工具栏
set guioptions-=m           " 隐藏菜单栏
"set statusline=\ %<%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&fileformat}\ %{&encoding}\ %c:%l/%L%)\
" 设置在状态行显示的信息
set foldcolumn=0
set foldmethod=indent
set foldlevel=3
" 去掉输入错误的提示声音
set noeb
" 在处理未保存或只读文件的时候，弹出确认
set confirm
" 自动缩进
set autoindent
set cindent
" Tab键的宽度
set tabstop=2
" 用space替代tab的输入
set expandtab
" 统一缩进为2
set softtabstop=2
set shiftwidth=2
" 不要用空格代替制表符
"set noexpandtab
" 在行和段开始处使用制表符
"set smarttab
" 显示行号
set number
" 历史记录数
set history=1000
"禁止生成临时文件
set nobackup
set noswapfile
"搜索忽略大小写
set ignorecase
"搜索逐字符高亮
set hlsearch
set incsearch
" 只有一个大写字母的搜索词，将大小写敏感
set smartcase
" 保留撤销历史
" set undofile
" set backupdir=~/.vim/.backup//
" set directory=~/.vim/.swp//
" set undodir=~/.vim/.undo//
" 出错时，不要发出响声。
set noerrorbells
"行内替换
set gdefault
"编码设置
set enc=utf-8
set fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936
"语言设置
"set langmenu=zh_CN.UTF-8
"set helplang=cn
" 我的状态行显示的内容（包括文件类型和解码）
"set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %{strftime(\"%d/%m/%y\ -\ %H:%M\")}
"set statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]
" 侦测文件类型
filetype on
" let g:auto_save_silent = 1  " do not display the auto-save notification
" 载入文件类型插件
filetype plugin on
" 为特定文件类型载入相关缩进文件
filetype indent on
" 保存全局变量
set viminfo+=!
" 带有如下符号的单词不要被换行分割
set iskeyword+=_,$,@,%,#,-
" 字符间插入的像素行数目
set linespace=0
" 增强模式中的命令行自动完成操作
set wildmenu
" 使回格键（backspace）正常处理indent, eol, start等
set backspace=2
" 允许backspace和光标键跨越行边界
" set whichwrap+=<,>,h,l
set wrap "设置自动换行
" 只有遇到指定的符号（比如空格、连词号和其他标点符号），才发生折行。也就是说，不会在单词内部折行。
set linebreak
" mouse=a可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）
" mouse=v 默认使用系统的鼠标,这样可以使用系统复制
set mouse=v
set selection=exclusive
set selectmode=mouse,key
" 通过使用: commands命令，告诉我们文件的哪一行被改变过
set report=0
" 在被分割的窗口间显示空白，便于阅读
set fillchars=vert:\ ,stl:\ ,stlnc:\
" 高亮显示匹配的括号
set showmatch
" 匹配括号高亮的时间（单位是十分之一秒）
set matchtime=1
" 为C程序提供自动缩进
set smartindent
" 高亮显示普通txt文件（需要txt.vim脚本）
au BufRead,BufNewFile *  setfiletype txt
"打开文件类型检测, 加了这句才可以用智能补全
set completeopt=longest,menu

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""热键设置
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 更新vim配置
" nmap wr :so ~/.vimrc<cr>
" 颜色设置

map ; :
" 文件、文件内容搜索
nmap ff :Files<cr>
nmap fj :GFiles<cr>
nmap fk :GFiles?<cr>
nmap fa :Ag<cr>
nmap fl :Marks<cr>
nmap fb :Buffers<cr>
nmap fh :History<cr>
nmap fw :FZF ~/work<cr>
nmap f~ :FZF ~/<cr> 

" 跳转导航
" nnoremap fo <c-o>
" nnoremap fi <c-i>
" 搜索替换
" :%s/aaa/bbb/c 把aaa换成bbb，/c表示需要询问确认
nmap f/ :%s/

" 书签设置
" nmap mm :marks<cr>
nmap M :delm!

" 移动屏幕
"
nmap K <c-b>
nmap J <c-f>
" 针对行，换行
nmap <c-k> ddkP
map <c-j> ddp
" 在选择模式时，按m注释
xmap m gcc
nmap sm gcc
" 针对单词的操作
nmap ci bvEc
nmap cy bvEy
nmap cd bvEd
" 快速编辑
nmap e A
nmap a I
" 切换NERDTreeMirror插件

map si :Explore<CR>
" 代替ctrl+w分屏幕
" 上下分割当前屏
nmap sw <c-w>s
" 左右分割当前屏
nmap sv <c-w>v
" 移动屏焦点
nmap sh <c-w>h
nmap sj <c-w>j
nmap sk <c-w>k
nmap sl <c-w>l
" 移动屏位置
nmap sH <c-w>H
nmap sJ <c-w>J
nmap sK <c-w>L
nmap sL <c-w>L
" 修改分屏大小
nmap s. <c-w>>
nmap s, <c-w><
nmap s= <c-w>+
nmap s- <c-w>-
" 切换屏焦点
nmap ss <c-w>w
" 关闭当前屏
nmap sc <c-w>c
" 打开Tab
" nmap wt :Te<cr>
" 搜索后主动取消搜索高亮
nmap sn :nohl<cr>
" 快速保存
nmap ss :w<cr>
nmap wq :q<cr> 
" 重新载入文件
nmap wr :bufdo e<cr>
" 关闭标签
nmap wo :tabo<cr>
nmap wn :tabnew<cr>
nmap wc :tabc<cr>
nmap w1 1gt
nmap w2 2gt
nmap w3 3gt
nmap w4 4gt
nmap w5 5gt
nmap w6 6gt
nmap w7 7gt
nmap w8 8gt
nmap w9 9gt
nmap w0 :tablast<cr>

" 使用系统的tree
" nmap si :Explore<cr>
"ctrl+a全选
map <c-a> ggVG
" 删除当前行但是保留空行
nmap da v^d


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""再编程
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" 打开上次光标位置
if has("autocmd")
 au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif
